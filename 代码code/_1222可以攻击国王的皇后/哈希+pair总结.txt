--题目有两个方向的思路--本代码选取皇后视角
--题目重点在于模拟8个方向，并进行比较哪个皇后更近
	
--重点1--8个方向，使用的是哈希表存储key，这里要用到key的搭建式子，需要学会如和搭建不会冲突的key表达式
--重点2--比较哪个更近，是平面图两点之间的距离的算法。因为是规范的棋盘格局，所以可以直接用x，y坐标差的绝对值相加即可abs(x) + abs (y) 

--代码知识点：
1——存储多个坐标的数据结构--不用结构体仅仅使用vector
//存储国王和皇后的数据结构很有意思--一共两层数组：第一层是皇后的标识，第二层数组仅有2个空间，存储平面坐标x，y
vector<vector<int>>& queens

2——学会使用lambda表达式在函数中的使用
auto sgn = [] (int x) -> int{
	return x > 0  ? 1 : ( x== 0 ? 0 : -1);
}

3——哈希表直接增加不存在key--value和替换已存在的key--value的做法———直接赋值即可
--初始化的方法也值得关注
candidate[key] = {queen, abs(x) + abs(y)

4——pair容器的用法--和key--value型有些差别：以下的value是pair容器pair<vector<int>, int>>
xx.first ：获取第一个值——value.first
xx.second:获取第二个值——value.second